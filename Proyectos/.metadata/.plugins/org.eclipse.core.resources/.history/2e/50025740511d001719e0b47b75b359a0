package sfc.aplicacion.test;

import java.util.List;

import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.persistence.Tuple;
import javax.persistence.criteria.CriteriaBuilder;
import javax.persistence.criteria.CriteriaQuery;
import javax.persistence.criteria.Root;

import sfc.aplicacion.modelo.Libro;

public class TestLibros {

	private static EntityManagerFactory emf = Persistence.createEntityManagerFactory("aplicacion");
	
	public static void main(String[] args) {
		imprimirDatos();
	}
	
	@SuppressWarnings("unchecked")
	public static void imprimirDatos() {
		EntityManager manager = emf.createEntityManager();
		//List<Libro> lista = (List<Libro>)manager.createQuery("FROM Libro WHERE id = :id").setParameter("id", 2).getResultList();
		CriteriaBuilder cb = manager.getCriteriaBuilder();
		CriteriaQuery<Tuple> cq = cb.createTupleQuery();
		//CriteriaQuery<Libro> query = cb.createQuery(Libro.class);
		
		//Root<Libro> root = query.from(Libro.class);
		Root<Libro> root = cq.from(Libro.class);
		
		//query.select(root).where(cb.equal(root.get("id"),1));
		cq.multiselect(root.get("id"), root.get("titulo")).where(cb.equal(root.get("id"), 1)));
		
		
		//List<Libro> lista = (List<Libro>)manager.createQuery(query).getResultList();
		List<Tuple> tupleResult = manager.createQuery(cq).getResultList();
		/*for (Libro libro : lista) {
			System.out.println(libro);
		}*/
		
		for (Tuple t : tupleResult) {
			int id = (Integer) t.get(0);
			String autor = (String) t.get(1);
			
			System.out.println("Libro: id="+id+", autor="+autor);
		}
	}
	
}
