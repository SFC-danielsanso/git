package tablas;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.HeadlessException;
import java.awt.Label;
import java.awt.Toolkit;
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.DataFlavor;
import java.awt.datatransfer.StringSelection;
import java.awt.datatransfer.UnsupportedFlavorException;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.io.IOException;
import java.util.List;

import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.JViewport;
import javax.swing.table.DefaultTableModel;

public class Panel extends JPanel {

	JTable tabla;
	DefaultTableModel dtm;
	KeyListener kl;

	public Panel() {
		setPreferredSize(new Dimension(500, 500));
		setBackground(Color.WHITE);
		setLayout(new BorderLayout());
		setFocusable(true);

		crearTabla();
		add(new JScrollPane(tabla), BorderLayout.NORTH);
		add(new JLabel("Hola"), BorderLayout.CENTER);
		add(new JTextField("aaa"), BorderLayout.SOUTH);
		
		KeyListener kl = new KeyListener() {

			@Override
			public void keyTyped(KeyEvent e) {

			}

			@Override
			public void keyReleased(KeyEvent e) {
				// TODO Auto-generated method stub

			}

			@Override
			public void keyPressed(KeyEvent e) {
				// System.out.println("Tecla pulsada...");
				// DETECTAMOS SI PULSA CTRL + C
				if (e.isControlDown() && e.getKeyCode() == KeyEvent.VK_C) {
					System.out.println("Copiando...");
					try {
						// IMPRIMIMOS EL CLIPBOARD
						Clipboard cb = Toolkit.getDefaultToolkit().getSystemClipboard();
						String texto = (String) cb.getData(DataFlavor.stringFlavor);
						System.out.println("Clipboard antes de borrar: " + texto);

						// BORRAMOS EL CLIPBOARD
						// StringSelection ss = new StringSelection("");
						// cb.setContents(ss, null);
						// texto = (String) cb.getData(DataFlavor.stringFlavor);
						// System.out.println("Clipboard despues de borrar: "+texto);

					} catch (Exception e1) {
						e1.printStackTrace();
					}
					// EVITAMOS QUE SE EJECUTE LA ACCION DE COPIAR
					e.consume();
				}
			}
		};

		for (Component c : getComponents()) {
			System.out.println("Componente...");
			if (c instanceof JScrollPane) {
				JViewport viewport =((JScrollPane) c).getViewport();
				for (Component c2 : viewport.getComponents()) {
					System.out.println(c2.getClass());
					c2.addKeyListener(kl);
				}
			}
			c.addKeyListener(kl);

		}

		//tabla.addKeyListener(kl);

		//tabla.addKeyListener(this);
	}

	private void crearTabla() {
		String[] columnas = { "ID", "TITULO", "AUTOR" };
		dtm = new DefaultTableModel(columnas, 0);
		tabla = new JTable(dtm) {
			public boolean isCellEditable(int row, int column) {
				return false;
			};
		};
	}

	public void addRows(List<Libro> lista) {
		Object row[] = new Object[3];
		for (Libro l : lista) {
			row[0] = l.getId();
			row[1] = l.getTitulo();
			row[2] = l.getAutor();
			dtm.addRow(row);
		}
	}

}
